---
import '../styles/base.css';
import Footer from '../components/Footer.astro';
import Cursor from '../components/Cursor.astro';
import ImageWithZoom from '../components/ImageWithZoom.astro';

export interface Props {
	title: string;
}

const { frontmatter } = Astro.props;

const publishedDate = new Date(frontmatter.published).toLocaleDateString('en-US', { month: 'short', day: 'numeric', year: 'numeric' });
---

<!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<title>{frontmatter.title} | Matt Stenback</title>
		<meta name="description" content={frontmatter.description}>
		<link rel="stylesheet" href="https://use.typekit.net/ymm2cgu.css">

		<!-- Google tag (gtag.js) -->
		<script async type="text/partytown" src="https://www.googletagmanager.com/gtag/js?id=G-D4FRL52F7E"></script>
		<script type="text/partytown">
			window.dataLayer = window.dataLayer || [];
			function gtag(){dataLayer.push(arguments);}
			gtag('js', new Date());

			gtag('config', 'G-D4FRL52F7E');
		</script>
	</head>

	<body class="bg-cartridge">
		<a href="/" id="matt-stenback-vertical" class="fixed top-8 left-6 font-mono italic text-sm text-purple text-vertical whitespace-nowrap transition-all duration-1000 -translate-x-10 opacity-0 no-underline max-md:hidden">Matt Stenback</a>

		<div class="container mx-auto px-6 mb-16 lg:px-10">
			<div class="pt-8 flex justify-between">
				<a href="/" id="matt-stenback" class="font-mono italic text-sm no-underline max-sm:text-xs">
					Matt Stenback
				</a>

				<p class="font-mono italic text-sm max-sm:text-xs">
					{publishedDate}
				</p>
			</div>	

			<div class="mt-32 mx-auto max-w-screen-lg max-md:mt-16">
				<div class="grid gap-x-4 justify-items-center font-mono italic text-sm invisible max-sm:text-xs md:mb-16 md:visible">
					{ frontmatter.tags.map((tag) => {
						return <div class="rounded-full bg-cartridge-500 bg-opacity-60 px-3 py-px leading-7">#{tag}</div>;
					}) }
				</div>

				<h1 class="font-headline text-8xl text-purple md:text-center md:text-9xl">
					{frontmatter.title}
				</h1>

				<div class="inline-grid gap-x-4 font-mono italic mt-8 text-xs md:hidden">
					{ frontmatter.tags.map((tag) => {
						return <div class="rounded-full bg-cartridge-500 px-2 py-px leading-6">#{tag}</div>;
					}) }
				</div>
				
				{ frontmatter.image && 
					<div class="mt-16">
						<ImageWithZoom url={frontmatter.image.url} title={frontmatter.image.title} enable={frontmatter.image.zoom} />
					</div>
				}
			</div>	
		</div>

		<div class="container mb-32 mt-8 mx-auto px-6 max-w-screen-sm text-lg md:mt-16 lg:text-xl">
			<slot />
		</div>

		<div class="max-md:-ml-6">
			<Footer />
		</div>

		<Cursor />

		<script is:inline>
			const observerOptions = {
				root: null,
				rootMargin: '0px',
				threshold: 1,
			};

			function observerCallback(entries) {
				entries.forEach((entry) => {
					if (entry.isIntersecting) {
						document.querySelector('#matt-stenback-vertical').classList.remove('!translate-x-0', '!opacity-100');
					}
					else {
						document.querySelector('#matt-stenback-vertical').classList.add('!translate-x-0', '!opacity-100');
					}
				});
			}

			const observer = new IntersectionObserver(observerCallback, observerOptions);
			observer.observe(document.querySelector('#matt-stenback'));
		</script>
	</body>
</html>
